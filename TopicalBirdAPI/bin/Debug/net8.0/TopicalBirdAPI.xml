<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TopicalBirdAPI</name>
    </assembly>
    <members>
        <member name="M:TopicalBirdAPI.Controllers.AuthController.RegisterToTopicalbird(TopicalBirdAPI.Data.DTO.UsersDTO.CreateUserRequest)">
             <summary>
             Register a new user
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/Auth/Register
                 Content-Type: multipart/form-data
            
                 {
                    "Email": "string",
                    "Password": "string",
                    "Handle": "string",
                    "DisplayName": "string",
                    "Icon": "file (e.g., image.png)"
                 }
             </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.AuthController.LogInToTopicalbird(TopicalBirdAPI.Data.DTO.AuthDTO.UserLoginRequest)">
             <summary>
             Authenticates and logs a user into the application using email and password.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/Auth/Login
                 Content-Type: application/json
            
                 {
                    "Email": "user.name@example.com",
                    "Password": "P@sswOrd123",
                    "RememberMe": false
                 }
             </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.AuthController.LogOutFromTopicalbird">
             <summary>
             Logs the current authenticated user out of the application.
             </summary>
             <remarks>
             This endpoint requires authentication. It invalidates the user's session/cookie.
            
             Sample request:
            
                 POST /api/Auth/Logout
                 // Request body is empty as no data is required.
            
             </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.AuthController.ChangePassword(TopicalBirdAPI.Data.DTO.AuthDTO.ChangePasswordRequest)">
             <summary>
             Changes the password for the currently authenticated user.
             </summary>
             <remarks>
             This endpoint requires authentication.
            
             Sample request:
            
                 PATCH /api/Auth/password
                 Content-Type: application/json
            
                 OldPassword: "P@sswOrd123"
                 NewPassword: "NewP@sswOrd456"
            
             </remarks>
        </member>
        <member name="T:TopicalBirdAPI.Controllers.CommentsController">
            <summary>
            Post comment manipulation
            </summary>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.PostsController.GetLatestPosts(System.String,System.Int32,System.Int32)">
            <summary>
            Gets latest posts, optionally filtered by a specific Nest.
            </summary>
            <param name="nest">Title of the Nest where posts will be fetched. Optional.</param>
            <param name="pageNo">Page number to fetch. Defaults to 1.</param>
            <param name="limit">Amount of posts that will be returned per page. Maximum is 50. Defaults to 20.</param>
            <returns>A paged list of the latest posts.</returns>
            <response code="200">Returns the paged list of posts.</response>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.GetAllUsers">
            <summary>
            Gets all users.
            </summary>
            <remarks>
            Admin only endpoint.
            </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.GetCurrentUser">
            <summary>
            Gets the currently authenticated user's details.
            </summary>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.GetUserById(System.Guid)">
            <summary>
            Gets a user's details by their unique ID.
            </summary>
            <param name="id">Id of user</param>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.GetByEmail(System.String)">
            <summary>
            Gets a user's details by their email address.
            </summary>
            <param name="email">Email address of user</param>
            <remarks>
            Admin only endpoint.
            </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.GetByUsername(System.String)">
            <summary>
            Gets a user's details by their unique username/handle.
            </summary>
            <param name="username">Username/Handle of user</param>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.GetBySearch(System.String)">
            <summary>
            Searches for users by matching query with Handle or DisplayName.
            </summary>
            <param name="query">Text to search</param>
            <remarks>
            Requires authentication.
            </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.UpdateUser(System.Guid,TopicalBirdAPI.Data.DTO.UsersDTO.UpdateUserRequest)">
            <summary>
            Updates an authenticated user's details (DisplayName and/or Icon).
            </summary>
            <param name="id">Id of user</param>
            <param name="dto">Data Transfer Object for UserUpdate</param>
            <remarks>
            Sample request:
            
                 PATCH api/Users/update/3fa85f64-5717-4562-b3fc-2c963f66afa6
                 Accepts: multipart/form-data
                 
                 {
                     DisplayName = string,
                     Icon = File
                 }
                 
            </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.BanUser(System.Guid)">
            <summary>
            Bans a user by ID.
            </summary>
            <param name="id">Id of user getting banned</param>
            <remarks>
            Admin only endpoint.
            </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.UnbanUser(System.Guid)">
            <summary>
            Unbans a user by ID.
            </summary>
            <param name="id">Id of user getting unbanned</param>
            <remarks>
            Admin only endpoint.
            </remarks>
        </member>
        <member name="M:TopicalBirdAPI.Controllers.UsersController.PromoteToAdmin(System.Guid)">
            <summary>
            Promotes a user to an admin.
            </summary>
            <param name="id">Id of user getting promoted</param>
            <remarks>
            Admin only endpoint.
            </remarks>
        </member>
        <member name="T:TopicalBirdAPI.Data.API.ConflictResponse">
            <summary>
            Represents an API response structure used to indicate a 409 Conflict error.
            It provides details about the resource or variable that caused the conflict.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.ConflictResponse.Type">
            <summary>
            The fully qualified type name of the variable or resource that is in conflict.
            </summary>
            <example>System.String</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.ConflictResponse.Variable">
            <summary>
            The name of the variable, parameter, or property that caused the conflict.
            </summary>
            <example>Username</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.ConflictResponse.Message">
            <summary>
            A descriptive message detailing what may have caused the conflict.
            </summary>
        </member>
        <member name="M:TopicalBirdAPI.Data.API.ConflictResponse.Create``1(``0,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:TopicalBirdAPI.Data.API.ConflictResponse"/> class.
            </summary>
            <typeparam name="T">The type of the variable that is in conflict.</typeparam>
            <param name="variable">The variable that is in conflict (used to determine its type and name).</param>
            <param name="message">An optional message detailing the cause of the conflict.</param>
            <returns>A new <see cref="T:TopicalBirdAPI.Data.API.ConflictResponse"/> instance.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if the provided variable is null.</exception>
        </member>
        <member name="T:TopicalBirdAPI.Data.API.ErrorResponse">
            <summary>
            Standardized response object for all API error statuses.
            This structure is used for consistent error reporting across the application.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.ErrorResponse.Message">
            <summary>
            A brief, high-level summary of the error.
            </summary>
            <example>Validation Failed</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.ErrorResponse.Description">
            <summary>
            General description or additional details for the error.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.ErrorResponse.Errors">
            <summary>
            Dictionary of field-specific errors, typically used for **400 Bad Request** (Validation).
            Key is the field name, Value is an array of error messages.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.ErrorResponse.ReferenceCode">
            <summary>
            A unique identifier generated by the server for internal logging and traceability. 
            This code can be provided to support for quicker issue resolution.
            </summary>
        </member>
        <member name="M:TopicalBirdAPI.Data.API.ErrorResponse.Create(System.String,System.String,System.String)">
            <summary>
            Creates a general ErrorResponse (e.g., for 500 or 409).
            </summary>
            <param name="message">The main message for the error.</param>
            <param name="description">An optional detailed description.</param>
            <param name="refCode">An optional unique reference code for logging.</param>
            <returns>A new <see cref="T:TopicalBirdAPI.Data.API.ErrorResponse"/> instance.</returns>
        </member>
        <member name="M:TopicalBirdAPI.Data.API.ErrorResponse.CreateFromModelState(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates an ErrorResponse specifically from the **ModelStateDictionary** (for **400 Bad Request**).
            </summary>
            <param name="modelState">The ModelStateDictionary containing validation errors.</param>
            <returns>An <see cref="T:TopicalBirdAPI.Data.API.ErrorResponse"/> populated with validation errors.</returns>
        </member>
        <member name="T:TopicalBirdAPI.Data.API.SuccessReponse`1">
            <summary>
            Represents a successful API response, optionally containing data of a specified type.
            This structure is commonly used for consistent response formatting.
            </summary>
            <typeparam name="T">The type of the data/content contained in the response.</typeparam>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.SuccessReponse`1.Message">
            <summary>
            A descriptive message about the success of the operation.
            </summary>
            <example>Operation completed successfully.</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.API.SuccessReponse`1.Content">
            <summary>
            The payload or data content returned by the successful operation. This can be null.
            </summary>
        </member>
        <member name="M:TopicalBirdAPI.Data.API.SuccessReponse`1.Create(System.String,`0)">
            <summary>
            Creates a new instance of the <see cref="T:TopicalBirdAPI.Data.API.SuccessReponse`1"/> class with a message and content.
            </summary>
            <param name="message">The message to include in the response.</param>
            <param name="Content">The content (data payload) to include in the response.</param>
            <returns>A new <see cref="T:TopicalBirdAPI.Data.API.SuccessReponse`1"/> instance.</returns>
        </member>
        <member name="T:TopicalBirdAPI.Data.DTO.AuthDTO.ChangePasswordRequest">
            <summary>
            Data Transfer Object (DTO) used for requesting a password change.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.AuthDTO.ChangePasswordRequest.OldPassword">
            <summary>
            The user's current password. This is required for security verification.
            </summary>
            <example>P@sswOrd123</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.AuthDTO.ChangePasswordRequest.NewPassword">
            <summary>
            The desired new password for the user's account.
            </summary>
            <example>NewP@ssw0rd456</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.AuthDTO.ChangePasswordRequest.ConfirmNewPassword">
            <summary>
            A confirmation of the new password, which must match the value in the <see cref="P:TopicalBirdAPI.Data.DTO.AuthDTO.ChangePasswordRequest.NewPassword"/> field.
            </summary>
            <example>NewP@ssw0rd456</example>
        </member>
        <member name="T:TopicalBirdAPI.Data.DTO.AuthDTO.UserLoginRequest">
            <summary>
            Data Transfer Object (DTO) used to submit user credentials for login authentication.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.AuthDTO.UserLoginRequest.Email">
            <summary>
            The email address of the user. This is used as the primary identifier for login.
            </summary>
            <example>user.name@example.com</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.AuthDTO.UserLoginRequest.Password">
            <summary>
            The user's password.
            </summary>
            <example>P@sswOrd123</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.AuthDTO.UserLoginRequest.RememberMe">
            <summary>
            A flag indicating whether the system should remember the user's login session. Defaults to false.
            </summary>
            <example>true</example>
        </member>
        <member name="T:TopicalBirdAPI.Data.DTO.CommentDTO.CommentResponse">
            <summary>
            Data Transfer Object (DTO) representing a single comment returned in an API response.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.CommentDTO.CommentResponse.Id">
            <summary>
            The unique identifier for the comment.
            </summary>
            <example>3fa85f64-5717-4562-b3fc-2c963f66afa6</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.CommentDTO.CommentResponse.Content">
            <summary>
            The text content of the comment.
            </summary>
            <example>This is a fantastic point! I completely agree.</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.CommentDTO.CommentResponse.CreatedAt">
            <summary>
            The date and time when the comment was created.
            </summary>
            <example>2025-10-15T14:30:00Z</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.CommentDTO.CommentResponse.Author">
            <summary>
            The author of the comment, represented by a <see cref="T:TopicalBirdAPI.Data.DTO.UsersDTO.UserResponse"/> DTO.
            </summary>
        </member>
        <member name="M:TopicalBirdAPI.Data.DTO.CommentDTO.CommentResponse.FromComment(TopicalBirdAPI.Models.Comment)">
            <summary>
            Creates a <see cref="T:TopicalBirdAPI.Data.DTO.CommentDTO.CommentResponse"/> DTO from a <see cref="T:TopicalBirdAPI.Models.Comment"/> model.
            </summary>
            <param name="cmt">The Comment model object to convert.</param>
            <returns>A fully populated <see cref="T:TopicalBirdAPI.Data.DTO.CommentDTO.CommentResponse"/> instance.</returns>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.UsersDTO.CreateUserRequest.Email">
            <summary>
            User email address
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.UsersDTO.CreateUserRequest.Password">
            <summary>
            Must be at least 8 char long and must consist of uppercase, lowercase, special and numerical char.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.UsersDTO.CreateUserRequest.Handle">
            <summary>
            Username. Case is ignored.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.UsersDTO.CreateUserRequest.DisplayName">
            <summary>
            Display name. Case is kept.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.UsersDTO.CreateUserRequest.Icon">
            <summary>
            Avatar image. Allowed types: .JPG, .PNG, .WEBP, .GIF. Maximum 5MB.
            </summary>
        </member>
        <member name="T:TopicalBirdAPI.Data.DTO.UsersDTO.UpdateUserRequest">
            <summary>
            Represents the data required to update a user's profile.
            </summary>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.UsersDTO.UpdateUserRequest.DisplayName">
            <summary>
            The new public display name for the user.
            </summary>
            <example>Shruti Thakur</example>
        </member>
        <member name="P:TopicalBirdAPI.Data.DTO.UsersDTO.UpdateUserRequest.Icon">
            <summary>
            The new profile image file for the user. Maximum 5MB. Only images and GIFs allowed.
            </summary>
            <example>photo.png</example>
        </member>
        <member name="T:TopicalBirdAPI.Migrations.InitIdentity">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.InitIdentity.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.InitIdentity.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.InitIdentity.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.UpdateToPostsModel">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.UpdateToPostsModel.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.UpdateToPostsModel.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.UpdateToPostsModel.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.PostVotesUpdate">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.PostVotesUpdate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.PostVotesUpdate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.PostVotesUpdate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.CommentCreatedAtField">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.CommentCreatedAtField.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.CommentCreatedAtField.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.CommentCreatedAtField.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.MoreCreatedAtFields">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.MoreCreatedAtFields.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.MoreCreatedAtFields.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.MoreCreatedAtFields.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.NewPostsNewMe">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewPostsNewMe.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewPostsNewMe.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewPostsNewMe.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.NewDTO">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewDTO.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewDTO.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewDTO.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.NestsComplete">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NestsComplete.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NestsComplete.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NestsComplete.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.AddHandleToUsers">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.AddHandleToUsers.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.AddHandleToUsers.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.AddHandleToUsers.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:TopicalBirdAPI.Migrations.NewRegister">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewRegister.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewRegister.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TopicalBirdAPI.Migrations.NewRegister.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
