using Microsoft.AspNetCore.Mvc.ModelBinding;

namespace TopicalBirdAPI.Data.API
{
    /// <summary>
    /// Standardized response object for all API error statuses.
    /// This structure is used for consistent error reporting across the application.
    /// </summary>
    public class ErrorResponse
    {
        /// <summary>
        /// A brief, high-level summary of the error.
        /// </summary>
        /// <example>Validation Failed</example>
        public string Message { get; set; }

        /// <summary>
        /// General description or additional details for the error.
        /// </summary>
        public string? Description { get; set; }

        /// <summary>
        /// Dictionary of field-specific errors, typically used for **400 Bad Request** (Validation).
        /// Key is the field name, Value is an array of error messages.
        /// </summary>
        public IDictionary<string, string[]>? Errors { get; set; }

        /// <summary>
        /// A unique identifier generated by the server for internal logging and traceability. 
        /// This code can be provided to support for quicker issue resolution.
        /// </summary>
        public string? ReferenceCode { get; set; }

        /// <summary>
        /// Creates a general ErrorResponse (e.g., for 500 or 409).
        /// </summary>
        /// <param name="message">The main message for the error.</param>
        /// <param name="description">An optional detailed description.</param>
        /// <param name="refCode">An optional unique reference code for logging.</param>
        /// <returns>A new <see cref="ErrorResponse"/> instance.</returns>
        public static ErrorResponse Create(string message, string? description = null, string? refCode = null)
        {
            return new ErrorResponse
            {
                Message = message,
                Description = description,
                ReferenceCode = refCode,
            };
        }

        /// <summary>
        /// Creates an ErrorResponse specifically from the **ModelStateDictionary** (for **400 Bad Request**).
        /// </summary>
        /// <param name="modelState">The ModelStateDictionary containing validation errors.</param>
        /// <returns>An <see cref="ErrorResponse"/> populated with validation errors.</returns>
        public static ErrorResponse CreateFromModelState(ModelStateDictionary modelState)
        {
            var errors = new Dictionary<string, string[]>();

            foreach (var (key, value) in modelState)
            {
                if (value.Errors.Count > 0)
                {
                    // Select all non-empty error messages for the field
                    errors.Add(key, value.Errors
                        .Where(e => !string.IsNullOrEmpty(e.ErrorMessage))
                        .Select(e => e.ErrorMessage)
                        .ToArray());
                }
            }

            return new ErrorResponse
            {
                Message = "Validation Failed",
                Description = "One or more validation errors occurred.",
                Errors = errors
            };
        }
    }
}